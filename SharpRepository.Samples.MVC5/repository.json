{
  "sharpRepository": {
    "repositories": {
      "default": "ef",
      "inMemory": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
      },
      "ef": {
        "factory": "SharpRepository.EfRepository.EfConfigRepositoryFactory, SharpRepository.EfRepository"
      },
      "efConnectionString": {
        "factory": "SharpRepository.EfRepository.EfConfigRepositoryFactory, SharpRepository.EfRepository",
        "connectionString": "Data Source=.\\SQLEXPRESS; Initial Catalog=SharpRepositoryMVC5Contacts; Integrated Security=True; MultipleActiveResultSets=True;",
        "dbContextType": "SharpRepository.Samples.MVC5.Models.ContactsDbContext, SharpRepository.Samples.MVC5"
      }
    },
    "cachingProviders": {
      "default": "noCachingProvider",
      "inMemoryProvider": {
        "factory": "SharpRepository.Repository.Caching.InMemoryConfigCachingProviderFactory, SharpRepository.Repository"
      },
      "noCachingProvider": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingProviderFactory, SharpRepository.Repository"
      }
    },
    "cachingStrategies": {
      "default": "none",
      "standard": {
        "factory": "SharpRepository.Repository.Caching.StandardConfigCachingStrategyFactory, SharpRepository.Repository",
        "generational": "true",
        "writeThrough": "false"
      },
      "timeout": {
        "factory": "SharpRepository.Repository.Caching.TimeoutConfigCachingStrategyFactory, SharpRepository.Repository",
        "timeout": "200"
      },
      "none": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingStrategyFactory, SharpRepository.Repository"
      }
    }
  },
  "sharpRepository2": {
    "repositories": {
      "efCore": {
        "factory": "SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository",
        "connectionString": "EfCoreConnectionString",
        "dbContextType": "SharpRepository.Tests.TestObjects.TestObjectContext, SharpRepository.Tests"
      },
      "inMem": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
      }
    }
  }
}