{
  "connectionStrings": {
    "EfCoreConnectionString": "Data Source=:memory:;"
  },
  "sharpRepository": {
    "repositories": {
      "default": "inMemoryNoCaching",
      "inMemory": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
      },
      "efCoreRepos": {
        "factory": "SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository",
        "connectionString": "EfCoreConnectionString",
        "dbContextType": "TestObjectContextCore, SharpRepository.Tests.Integration",
        "cachingStrategy": "timeout"
      },
      "inMemoryNoCaching": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository",
        "cachingStrategy": "none",
        "cachingProvider": "noCachingProvider"
      }
    },
    "cachingProviders": {
      "default": "inMemoryProvider",
      "inMemoryProvider": {
        "factory": "SharpRepository.Repository.Caching.InMemoryConfigCachingProviderFactory, SharpRepository.Repository"
      },
      "noCachingProvider": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingProviderFactory, SharpRepository.Repository"
      }
      //,
      //"redisProvider": {
      //  "factory": "SharpRepository.Caching.Redis.RedisConfigCachingProviderFactory, SharpRepository.Caching.Redis",
      //  "host": "127.0.0.1",
      //  "port": "6379"
      //},
      //"memCachedProvider": {
      //  "factory": "SharpRepository.Caching.Memcached.MemCachedConfigCachingProviderFactory, SharpRepository.Caching.Memcached",
      //  "sectionName": "memcached"
      //}
    },
    "cachingStrategies": {
      "default": "standard",
      "standard": {
        "factory": "SharpRepository.Repository.Caching.StandardConfigCachingStrategyFactory, SharpRepository.Repository",
        "generational": "true",
        "writeThrough": "false"
      },
      "timeout": {
        "factory": "SharpRepository.Repository.Caching.TimeoutConfigCachingStrategyFactory, SharpRepository.Repository",
        "timeout": "200"
      },
      "none": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingStrategyFactory, SharpRepository.Repository"
      }
    }
  },
  "sharpRepository2": {
    "repositories": {
      "efCore": {
        "factory": "SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository",
        "dbContextType": "TestObjectContextCore, SharpRepository.Tests.Integration"
      },
      "inMem": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
      }
    }
  }
}